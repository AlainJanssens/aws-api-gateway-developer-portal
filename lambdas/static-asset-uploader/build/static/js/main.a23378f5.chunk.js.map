{"version":3,"sources":["services/get-fragments.js","services/api.js","pages/Home.jsx","pages/GettingStarted.jsx","services/state.js","services/api-catalog.js","services/misc.js","pages/Dashboard.jsx","services/self.js","components/ApisMenu.jsx","components/SwaggerUiLayout.jsx","pages/Apis.jsx","components/AlertPopup.jsx","components/SignIn.jsx","components/Register.jsx","components/NavBar.jsx","index.js"],"names":["fragments","observable","loadHtml","path","fragment","jsx","fetch","then","response","text","parsedMarkdown","frontmatter","Object","objectSpread","react_default","a","createElement","with_html_default","escapeHtml","source","body","renderers","attributes","cachedClient","link","_ref","href","props","objectWithoutProperties","test","assign","target","rel","Link","to","HomePage","observer","Fragment","Segment","vertical","textAlign","style","color","backgroundColor","padding","margin","Image","centered","size","src","Header","as","Home","header","tagline","Button","positive","gettingStartedButton","apiListButton","Container","fluid","GettingStarted","awsRegion","window","config","region","cognitoRegion","cognitoUserPoolId","userPoolId","cognitoIdentityPoolId","identityPoolId","cognitoClientId","userPoolClientId","initApiGatewayClient","arguments","length","undefined","accessKeyId","secretAccessKey","sessionToken","apigClientFactory","newClient","accessKey","secretKey","apiGatewayClient","Promise","resolve","poller","setInterval","clearInterval","AWS","store","api","apiKey","apiList","loaded","apiGateway","generic","cognitoUser","usagePlans","subscriptions","initialize","this","clear","reset","_this","defaults","_len","keys","Array","_key","forEach","key","_","set","get","resetUserData","reactTo","triggerFn","effectFn","reaction","data","action","usagePlan","usagePlanId","subscribed","id","find","sub","apis","updateSubscriptionStatus","concat","logo","specificLogo","stage","headers","Accept","redirect","ok","fetchApiImage","catalogPromiseCache","subscriptionsPromiseCache","apiKeyPromiseCache","updateAllUserData","bustCache","all","updateUsagePlansAndApisList","updateSubscriptions","apiKeyOrPromise","_ref3","value","updateApiKey","_ref$data","reduce","acc","cloneDeep","catch","subscriptionsOrPromise","_ref2","mapUsageByDate","usage","usedOrRemaining","dates","items","apiKeyId","apiKeyUsage","startDate","apiKeyDate","Date","isArray","map","date","setDate","getDate","item","toConsumableArray","mapApiKeyUsageByDate","dailyUsage","used","remaining","sort","parseInt","confirmMarketplaceSubscription","token","put","toTitleCase","string","firstLetter","allOtherLetters","slice","toUpperCase","toLowerCase","loadUsage","canvasId","start","end","getFullYear","getMonth","toJSON","split","result","ctx","document","getElementById","JSON","stringify","labels","d","toLocaleDateString","weekday","year","month","day","max","Math","apply","chartConfig","type","datasets","label","quota","period","lineTension","borderColor","pointBackgroundColor","pointBorderColor","borderWidth","pointRadius","pointHoverRadius","options","scales","yAxes","ticks","beginAtZero","suggestedMax","Chart","error","console","userPool","Grid","container","Row","Column","paddingTop","background","border","borderRadius","Divider","filter","index","firstApiName","swagger","info","title","extraApiCount","List","Item","width","widescreen","marginBottom","Popup","trigger","cursor","content","on","position","throttle","Message","rateLimit","burstLimit","toString","Loader","active","poolData","UserPoolId","ClientId","isAuthenticated","getCognitoLoginKey","login","email","password","authenticationDetails","AuthenticationDetails","Username","Password","localCognitoUser","CognitoUser","Pool","CognitoUserPool","reject","authenticateUser","onSuccess","credentials","CognitoIdentityCredentials","IdentityPoolId","Logins","defineProperty","getIdToken","getJwtToken","refresh","post","onFailure","logout","signOut","localStorage","loadingApis","hasGatewayApis","hasGenericApis","selectedApiId","params","apiId","Menu","inverted","attached","ApiSubsection","listOfApis","isActive","InfoReplacement","specSelectors","basePath","host","externalDocs","className","display","flex","marginRight","fontWeight","version","SwaggerUiLayout_SubscriptionButtons","SubscriptionButtons","_React$Component","_getPrototypeOf2","classCallCheck","args","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","onClick","delete","React","Component","SwaggerLayoutPlugin","components","InfoContainer","ApisPage","updateApi","selectIt","thisApi","allApis","getApi","match","swaggerUiConfig","dom_id","plugins","supportedSubmitMethods","spec","onComplete","uiHandler","preauthorizeApiKey","SwaggerUI","errorHeader","errorBody","overflow","components_ApisMenu","icon","Icon","name","circular","Content","AlertPopup","isVisible","message","handleDismiss","setState","hidden","negative","floating","onDismiss","SignIn","isSubmitting","signedIn","errorMessage","isOpen","open","close","handleChange","event","handleLogin","preventDefault","_this$props","e","Redirect","Modal","onOpen","onClose","Form","onSubmit","loading","Input","onChange","autoComplete","Actions","primary","Register","handleRegister","attributeList","signUp","err","register","NavBar","borderless","paddingRight","APIs","SignIn_SignIn","Register_Register","App","getCurrentUser","getSession","session","hashRoute","location","hash","substring","history","pushState","BrowserRouter","components_NavBar","AlertPopup_AlertPopup","Switch","Route","exact","component","Dashboard","Apis","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.a23378f5.chunk.js","sourcesContent":["// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// react-router\nimport { Link } from 'react-router-dom'\n\n// mobx\nimport { observable } from 'mobx'\n\n// markdown parsing\nimport frontmatter from 'front-matter'\nimport Markdown from 'react-markdown/with-html'\n\nexport const fragments = observable({})\n\nloadHtml('/custom-content/content-fragments/GettingStarted.md', 'GettingStarted')\nloadHtml('/custom-content/content-fragments/Home.md', 'Home')\nloadHtml('/custom-content/content-fragments/APIs.md', 'APIs')\n\n/**\n * \n * Pre-load the custom-content markdown, parses its frontmatter, and renders it as JSX. This method is asynchronous and doesn't actually return anything -- instead, it acts on a MobX Observable -- the fragment. The fragment is an object with a `jsx` property that maps to the rendered component, and any number of other properties collected from the front-matter.\n * \n * @param {String} path   Path to the file to load in. Should be a markdown file.\n * @param {String} fragment   Name of the fragment. Determines where rendered data gets stored.\n * \n * @returns {Object} \n */\nfunction loadHtml(path, fragment) {\n  // if we want to display a loading indicator, this would be where\n  fragments[fragment] = { jsx: () => null }\n\n  fetch(path).then(response => response.text().then(text => {\n    let parsedMarkdown = frontmatter(text)\n\n    fragments[fragment] = {\n      jsx: () => (\n        <Markdown \n          escapeHtml={false} \n          source={parsedMarkdown.body}\n          renderers={renderers}\n        />\n      ),\n      ...parsedMarkdown.attributes\n    }\n  }))\n}\n\n/**\n * Renderers is a map of node type to component. \n * \n * In this case, we only override links. Any time react-markdown tries to render a link, it'll render this component. Normal links will work, but the cause a full page reload. We don't want that, so we can replacing them with react-router Links. However, replacing external links with react-router Links causes them to not work at all. We don't want that either, so we attempt to determine if a link is external or not, and use `Link` or `a` appropriately.\n */\nconst renderers = {\n  link: ({ href, ...props }) => {\n    // if absolute url, use an `a` tag\n    // https://stackoverflow.com/a/19709846/4060061\n    if (/^(?:[a-z]+:)?\\/\\//i.test(href))\n      return <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" {...props} />\n\n    // replace links with react-router-dom tags so that they \n    return <Link to={href} {...props} />\n  }\n}","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport AWS from 'aws-sdk'\n\nexport const awsRegion = window.config.region\nexport const cognitoRegion = window.config.region\nexport const cognitoUserPoolId = window.config.userPoolId\nexport const cognitoIdentityPoolId = window.config.identityPoolId\nexport const cognitoClientId = window.config.userPoolClientId\n\nAWS.config.region = cognitoRegion\n\nlet cachedClient\n\nexport function initApiGatewayClient({ accessKeyId, secretAccessKey, sessionToken } = {}) {\n  cachedClient = window.apigClientFactory.newClient({\n    accessKey: accessKeyId,\n    secretKey: secretAccessKey,\n    sessionToken: sessionToken,\n    region: awsRegion\n  })\n}\n\nexport function apiGatewayClient() {\n  if (cachedClient) return Promise.resolve(cachedClient)\n  \n  return new Promise(resolve => {\n    const poller = setInterval(() => {\n      if (cachedClient) {\n        clearInterval(poller)\n        resolve(cachedClient)\n      }\n    }, 100)\n  })\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// mobx\nimport { observer } from 'mobx-react'\n\n// fragments\nimport { fragments } from 'services/get-fragments'\n\n// react-router\nimport { Link } from 'react-router-dom'\n\n// semantic-ui\nimport { Header, Segment, Container, Image, Button } from 'semantic-ui-react'\n\nexport const HomePage = observer(() => (\n  <React.Fragment>\n    <Segment vertical textAlign='center' style={{ color: \"whitesmoke\", backgroundColor: \"slategray\", padding: \"40px 0px\", margin: \"0px !important\" }}>\n      <Image centered size='small' src='/custom-content/home-image.png' />\n      <Header as='h1' style={{ color: \"whitesmoke\" }}>{fragments.Home.header}</Header>\n      <p>{fragments.Home.tagline}</p>\n      <Link to=\"/getting-started\"><Button positive>{fragments.Home.gettingStartedButton}</Button></Link>\n      <Link to=\"/apis\" style={{ padding: \"0.78571429em 1.5em 0.78571429em\", color: \"white\" }}>{fragments.Home.apiListButton}</Link>\n    </Segment>\n    <Segment vertical style={{ padding: \"40px 0px\", margin: \"0 !important\" }}>\n      <Container fluid text textAlign='justified'>\n        <fragments.Home.jsx />\n      </Container>\n    </Segment>\n  </React.Fragment>\n))\n\nexport default HomePage\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// mobx\nimport { observer } from 'mobx-react'\n\n// fragments\nimport { fragments } from 'services/get-fragments'\n\n// semantic-ui\nimport { Container } from 'semantic-ui-react'\n\nexport default observer(() => (\n  <Container style={{ padding: \"40px\" }}>\n    <fragments.GettingStarted.jsx />\n  </Container>\n))\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { observable, reaction } from 'mobx'\nimport _ from 'lodash'\n\nimport { getSubscribedUsagePlan } from 'services/api-catalog'\n\n/**\n * A function that returns a new object contain the default store\n */\nfunction storeDefaults() {\n  return {\n    api: undefined,\n    apiKey: undefined,\n    \n    apiList: {\n      loaded: false,\n      apiGateway: [],\n      generic: []\n    },\n\n    cognitoUser: undefined,\n\n    usagePlans: [],\n\n    subscriptions: []\n  }\n}\n\n/**\n * Trick for logging the store: clone the object. i.e. _.cloneDeep(store) or JSON.parse(JSON.stringify(store))\n */\nexport const store = observable({\n  ...(storeDefaults()),\n\n  initialize() {\n    Object.assign(this, storeDefaults())\n\n    return this\n  },\n\n  /**\n   * Reset the entire store to the original values\n   */\n  clear() {\n    return this.initialize()\n  },\n\n  /**\n   * Reset specific keys on the store to their initial values\n   * \n   * @param {string[]} keys   The keys that should be reset. Accepts lodash paths. (e.g. )\n   */\n  reset(...keys) {\n    const defaults = storeDefaults()\n    keys.forEach(key =>_.set(this, key, _.get(defaults, key)))\n    return this\n  },\n\n  resetUserData() {\n    this.reset('apiKey', 'cognitoUser', 'subscriptions')\n  }\n})\n\n/**\n * \n * A short-hand function for creating reactions with protections against cyclical errors.\n * \n * @param {Function} triggerFn   A function that determines when fire the effectFn and what to pass to the effectFn.\n * @param {Function} effectFn   The side-effect to run when the data tracked by the triggerFn is changed.\n * \n * A note on MobX reactions: the side effect will \"only react to data that was accessed in the data expression\" and will only fire \"when the data returned by the expression has changed\". (https://mobx.js.org/refguide/reaction.html)\n */\nfunction reactTo(triggerFn, effectFn) {\n  // note -- had issues with cyclical reactions in the past\n  // the comments below will fix them if they come up again\n  // DO NOT REMOVE THEM\n\n  // function restartReaction() {\n    reaction(\n      triggerFn,\n      (data, action) => {\n        // action.dispose() // clear this \"listener\" so we don't cycle\n        \n        effectFn(data, action)\n\n        // restartReaction() // restart the reaction after doing stuff to the data\n      }\n    )\n  // }\n\n  // restartReaction()\n}\n\nreactTo(\n  () => ({ subscriptions: store.subscriptions, usagePlans: store.usagePlans }),\n  ({ usagePlans }) => {\n    updateSubscriptionStatus(usagePlans)\n  }\n)\n\nreactTo(\n  () => [].concat(store.apiList.apiGateway, store.apiList.generic),\n  apiList => {\n    fetchApiImage(apiList)\n  }\n)\n\n/**\n * \n */\nfunction fetchApiImage(apiList) {\n  apiList.forEach(api => {\n    if (!api.logo) {\n      let specificLogo = `/custom-content/api-logos/${api.id}_${api.stage}.png`\n  \n      // fetch automatically follows redirects; setting redirect to `manual` prevents this\n      // we need to prevent it so that we can accurately determine if the image exists\n      fetch(specificLogo, { headers: { Accept: \"image/png\" }, redirect: \"manual\" }).then(response => {\n        if (response.ok)\n          api.logo = specificLogo\n\n        else api.logo = '/custom-content/api-logos/default.png'\n      })\n    }\n  })\n}\n\n/**\n * A helper function that simple re-builds the subscribed status for each api in the catalog.\n * \n * Should be run every time either the catalog updates or the \n */\nfunction updateSubscriptionStatus(usagePlans) {\n  if (usagePlans)\n    usagePlans.forEach(usagePlan => {\n      let subscribed = !!getSubscribedUsagePlan(usagePlan.id)\n      usagePlan.subscribed = subscribed\n\n      usagePlan.apis.forEach(api => api.subscribed = subscribed)\n    })\n}\n\nexport default store.initialize()\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport _ from 'lodash'\n\nimport { apiGatewayClient } from './api'\nimport { store } from './state'\n\n/* Catalog and API Utils */\n\n/**\n * \n * Does all operations to get user data at once.\n * \n * @param {Boolean} bustCache=true   Ignore the cache and re-make the calls? Defaults to true.\n */\nexport function updateAllUserData(bustCache = true) {\n  return Promise.all([\n    updateUsagePlansAndApisList(bustCache),\n    updateSubscriptions(bustCache),\n    updateApiKey(bustCache)\n  ])\n}\n\n/**\n * \n * Update the catalog for the current user. Both request and response are cached, so unless the cache is busted, this should only ever make one network call.\n * \n * @param {Boolean} [bustCache=false]   Ignore the cache and re-make the network call. Defaults to false.\n * \n */\nexport function updateUsagePlansAndApisList(bustCache = false) {\n  // if we've already tried, just return that promise\n  if (!bustCache && catalogPromiseCache) return catalogPromiseCache\n\n  return catalogPromiseCache = apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/catalog', {}, {}, {}))\n    .then(({ data = [] }) => {\n      store.usagePlans = data.apiGateway\n      store.apiList = {\n        loaded: true,\n        apiGateway: getApiGatewayApisFromUsagePlans(store.usagePlans), // MUST create\n        generic: data.generic\n      }\n    })\n    .catch(() => {\n      store.usagePlans = null\n      store.apiList = {\n        loaded: true,\n        apiGateway: [],\n        generic: []\n      }\n    })\n}\nlet catalogPromiseCache // WARNING: Don't touch this. Should only be used by updateCatalogAndApisList.\n\n/**\n * A function that takes an input usage plans and creates an list of apis out of it.\n * \n * - Makes sure each api has a non-recursive 'usagePlan' object\n * \n * returns an array of apis\n */\nfunction getApiGatewayApisFromUsagePlans(usagePlans) {\n  return usagePlans.reduce((acc, usagePlan) => {\n\n    usagePlan.apis.forEach(api => {\n      api.usagePlan = _.cloneDeep(usagePlan)\n      // remove the apis from the cloned usagePlan so we don't go circular\n      delete api.usagePlan.apis\n    })\n\n    return acc.concat(usagePlan.apis)\n  }, [])\n}\n\n/**\n * Return the API with the provided apiId. Can also provide the special strings \"FIRST\" or \"ANY\" to get the first API returned. Can select the api returned as a side-effect.\n * \n * @param {String} apiId   An apiId or the special strings 'FIRST' or 'ANY'. 'FIRST' and 'ANY' both return the first api encountered.\n * @param {Boolean} [selectIt=false]   If true, sets the found API as the current 'selected' API.\n */\nexport function getApi(apiId, selectIt = false) {\n  return updateUsagePlansAndApisList()\n    .then(() => {\n      let thisApi\n\n      let allApis = [].concat(store.apiList.apiGateway, store.apiList.generic)\n  \n      if (allApis.length) {\n        if (apiId === 'ANY' || apiId === 'FIRST') {\n          thisApi = allApis[0]\n        }\n\n        else {\n          thisApi = allApis.find(api => api.id.toString() === apiId)\n        }\n      }\n\n      if (selectIt) store.api = thisApi\n\n      return thisApi\n    })\n}\n\n/* Subscription Utils */\n\n/**\n * Fetch and update subscriptions store. Uses caching to determine if it should actually fetch or return the stored result.\n * \n * @param {Boolean} [bustCache=false]   Ignore the cache and re-make the network call. Defaults to false.\n */\nexport function updateSubscriptions(bustCache = false) {\n  let subscriptionsOrPromise = store.subscriptions.length ? store.subscriptions : subscriptionsPromiseCache\n  if (!bustCache && subscriptionsOrPromise) return Promise.resolve(subscriptionsOrPromise)\n\n  return subscriptionsPromiseCache = apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/subscriptions', {}, {}, {}))\n    .then(({ data }) => (store.subscriptions = data))\n}\nlet subscriptionsPromiseCache // WARNING: Don't touch this. Should only be used by updateCatalogAndApisList.\n\nexport function getSubscribedUsagePlan(usagePlanId) {\n  return store.subscriptions.find(sub => sub.id === usagePlanId)\n}\n\nexport function subscribe(usagePlanId) {\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.put('/subscriptions/' + usagePlanId, {}, {}))\n    .then(() => updateSubscriptions(true))\n}\n\nexport function unsubscribe(usagePlanId) {\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.delete(`/subscriptions/${usagePlanId}`, {}, {}))\n    .then(() => updateSubscriptions(true))\n}\n\n/**\n * \n * Fetches and updates the apiKey in the store. Both request and response are cached, so unless the cache is busted, this should only ever make one network call.\n * \n */\nexport function updateApiKey(bustCache) {\n  let apiKeyOrPromise = store.apiKey ? store.apiKey : apiKeyPromiseCache\n  if (!bustCache && apiKeyOrPromise) return Promise.resolve(apiKeyOrPromise)\n\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/apikey', {}, {}, {}))\n    .then(({data}) => (store.apiKey = data.value))\n}\nlet apiKeyPromiseCache\n\nexport function fetchUsage(usagePlanId) {\n  const date = new Date()\n  const start = new Date(date.getFullYear(), date.getMonth(), 1).toJSON().split('T')[0]\n  const end = date.toJSON().split('T')[0]\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/subscriptions/' + usagePlanId + '/usage', { start, end }, {}))\n}\n\nexport function mapUsageByDate(usage, usedOrRemaining) {\n  const dates = {}\n  Object.keys(usage.items).forEach(apiKeyId => {\n    const apiKeyUsage = mapApiKeyUsageByDate(usage.items[apiKeyId], usage.startDate, usedOrRemaining)\n\n    // handles the bizarre case that the user has more than one api key\n    // currently not possible (and my never be), so we probably don't need it\n    apiKeyUsage.forEach(dailyUsage => {\n      const date = dailyUsage[0]\n      const used = dailyUsage[1]\n      const remaining = dailyUsage[2]\n      \n      if (!dates[date])\n      dates[date] = { used: 0, remaining: 0 }\n\n      dates[date].used += used\n      dates[date].remaining += remaining\n    })\n  })\n  \n  const usageByDate = Object.keys(dates).sort().map(date => [\n    parseInt(date, 10), \n    dates[date].used, \n    dates[date].remaining \n  ])\n  \n  return usageByDate\n}\n\nfunction mapApiKeyUsageByDate(apiKeyUsage, startDate) {\n  const apiKeyDate = new Date(startDate)\n  \n  if (apiKeyUsage && !Array.isArray(apiKeyUsage[0]))\n    apiKeyUsage = [apiKeyUsage]\n  \n  return apiKeyUsage.map((usage) => {\n    const date = apiKeyDate.setDate(apiKeyDate.getDate())\n    const item = [date, ...usage]\n    apiKeyDate.setDate(apiKeyDate.getDate() + 1)\n    return item\n  })\n}\n\n/* Marketplace integration */\n\nexport function confirmMarketplaceSubscription(usagePlanId, token) {\n  if (!usagePlanId) {\n    return\n  }\n  \n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.put('/marketplace-subscriptions/' + usagePlanId, {}, {\"token\" : token}))\n}","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport function getQueryString() {\n  const { search: q } = window.location\n\n  if (!q) return {}\n\n  return (/^[?#]/.test(q) ? q.slice(1) : q)\n    .split('&')\n    .reduce((params, param) => {\n      let [ key, value ] = param.split('=');\n      params[key] = value ? decodeURIComponent(value) : '';\n      return params;\n    }, { })\n}\n\nexport function toTitleCase(string) {\n\tlet firstLetter = string[0]\n\tlet allOtherLetters = string.slice(1)\n\n\treturn firstLetter.toUpperCase() + allOtherLetters.toLowerCase()\n}","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\nimport { Grid, Header, Popup, Loader, Message, List, Divider } from 'semantic-ui-react'\n\nimport Chart from 'chart.js'\nimport { fetchUsage, mapUsageByDate } from 'services/api-catalog'\nimport { toTitleCase } from 'services/misc'\n\nimport { observer } from 'mobx-react'\n\nimport { store } from 'services/state'\n\nimport _ from 'lodash'\n\nfunction loadUsage(usagePlan, canvasId) {\n  fetchUsage(usagePlan.id)\n    .then((result) => {\n      const data = mapUsageByDate(result.data, 'used')\n      const ctx = document.getElementById(canvasId)\n\n      let oldDataString = JSON.stringify(_.get(usagePlan, 'usage.data', {}))\n      let newDataString = JSON.stringify(data)\n\n      if (oldDataString !== newDataString)\n        usagePlan.usage = { data }\n\n      const labels = data.map(d => new Date(d[0]).toLocaleDateString('en-US', { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }))\n      const used = data.map(d => d[1])\n      const remaining = data.map(d => d[2])\n      const max = Math.max(...used, ...remaining)\n\n      const chartConfig = {\n        type: 'line',\n        data: {\n          labels,\n          datasets: [\n            {\n              label: `Requests used` + (usagePlan.quota ? ` (per ${toTitleCase(usagePlan.quota.period)})` : ''),\n              data: used,\n              lineTension: 0,\n              backgroundColor: '#00bfff',\n              borderColor: '#00bfff',\n              pointBackgroundColor: 'transparent',\n              pointBorderColor: 'transparent',\n              borderWidth: 2,\n              pointRadius: 10,\n              pointHoverRadius: 10\n\n            },\n            {\n              label: `Remaining requests` + (usagePlan.quota ? ` (per ${toTitleCase(usagePlan.quota.period)})` : ''),\n              data: remaining,\n              lineTension: 0,\n              backgroundColor: 'transparent',\n              borderColor: 'red',\n              pointBackgroundColor: 'transparent',\n              pointBorderColor: 'transparent',\n              borderWidth: 2,\n              pointRadius: 10,\n              pointHoverRadius: 10\n            }\n          ]\n        },\n        options: { \n          scales: { yAxes: [ { ticks: {\n            beginAtZero: true,\n            suggestedMax: max + (max * 0.02)\n          } } ] }\n        }\n      }\n\n      new Chart(ctx, chartConfig)\n    })\n    .catch((error) => {\n      console.error(error)\n      if (!usagePlan.usage)\n        usagePlan.usage = { }\n\n      usagePlan.usage.error = error\n    })\n}\n\nexport default observer(() => {\n  return (\n    <Grid container>\n      <Grid.Row>\n        <Grid.Column style={{ paddingTop: \"40px\" }}>\n            <Header size=\"medium\">API Key</Header>\n            <code style={{\n              background: \"black\",\n              border: \"1px solid gray\",\n              padding: \"7px 8px\",\n              color: \"lightgray\",\n              borderRadius: \"5px\"\n            }}>\n              {store.apiKey}\n            </code>\n        </Grid.Column>\n      </Grid.Row>\n      <Divider />\n      <Grid.Row>\n\n      {store.usagePlans\n        .filter(usagePlan => usagePlan.subscribed)\n        .map((usagePlan, index) => {\n\n        let firstApiName = usagePlan.apis[0].swagger.info.title\n        let extraApiCount = usagePlan.apis.length - 1\n        let apiList = usagePlan.apis.reduce((acc, api) => acc.concat(\n          <List.Item key={api.id}>{api.swagger.info.title}</List.Item>\n        ), [])\n        let canvasId = `api-usage-chart-container-${usagePlan.id}` + index\n\n        loadUsage(usagePlan, canvasId)\n\n        return (\n          <Grid.Column width={16} widescreen={8} key={usagePlan.id} style={{ marginBottom: \"40px\" }}>\n            <Header size=\"medium\">\n              Usage for {extraApiCount ? (\n                <Popup\n                  trigger={ <a style={{ cursor: \"pointer\" }}>{firstApiName} and {extraApiCount} more...</a> }\n                  content={ <List> {apiList} </List> }\n                  on={['hover', 'click']}\n                  position=\"right center\"\n                />\n              ) : (\n                firstApiName\n              )}\n            </Header>\n            {usagePlan.throttle && (\n              <Message info>\n              <p>\n                Requests limited to {usagePlan.throttle.rateLimit} per second, and {usagePlan.throttle.burstLimit} in a burst.\n              </p>\n              </Message>\n            )}\n              \n              { !usagePlan.usage ? (\n                <Loader active />\n              ) : ( \n                usagePlan.error ? (\n                  <Message error content={usagePlan.error.toString()} />\n                ) : null\n              )}\n              <canvas id={canvasId} />\n          </Grid.Column>\n        )\n      })}\n      </Grid.Row>\n    </Grid>\n  )\n})\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport AWS from 'aws-sdk'\nimport { CognitoUserPool, CognitoUser, AuthenticationDetails } from 'amazon-cognito-identity-js'\n\n// services\nimport { store } from 'services/state'\nimport { initApiGatewayClient, apiGatewayClient } from 'services/api'\nimport { updateAllUserData } from 'services/api-catalog'\nimport { cognitoIdentityPoolId, cognitoUserPoolId, cognitoClientId, cognitoRegion } from 'services/api'\n\nconst poolData = {\n  UserPoolId: cognitoUserPoolId,\n  ClientId: cognitoClientId\n}\n\nlet userPool\n\nexport function isAuthenticated() {\n  return store.cognitoUser\n}\n\nfunction getCognitoLoginKey() {\n  return `cognito-idp.${cognitoRegion}.amazonaws.com/${cognitoUserPoolId}`\n}\n\nexport function init() {\n  // attempt to refresh credentials from active session\n  userPool = new CognitoUserPool(poolData)\n  store.cognitoUser = userPool.getCurrentUser()\n\n  if (store.cognitoUser !== null) {\n    store.cognitoUser.getSession(function(err, session) {\n      if (err) {\n        logout()\n        console.error(err)\n        return\n      }\n\n      const cognitoLoginKey = getCognitoLoginKey()\n      const Logins = {}\n      Logins[cognitoLoginKey] = session.getIdToken().getJwtToken()\n      AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n        IdentityPoolId: cognitoIdentityPoolId,\n        Logins: Logins\n      })\n\n      AWS.config.credentials.refresh((error) => {\n        if (error) {\n          logout()\n          console.error(error)\n        } else {\n          initApiGatewayClient(AWS.config.credentials)\n          updateAllUserData()\n        }\n      })\n    })\n  } else {\n    initApiGatewayClient()\n  }\n}\n\nexport function register(email, password) {\n  localStorage.clear()\n  const attributeList = []\n  return new Promise((resolve, reject) => {\n    userPool.signUp(email, password, attributeList, null, (err, result) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(login(email, password))\n      }\n    })\n  })\n}\n\nexport function login(email, password) {\n    const authenticationDetails = new AuthenticationDetails({\n      Username: email,\n      Password: password\n    })\n\n    let localCognitoUser = new CognitoUser({\n      Username: email,\n      Pool: new CognitoUserPool(poolData)\n    })\n\n    return new Promise((resolve, reject) => {\n      localCognitoUser.authenticateUser(authenticationDetails, {\n        onSuccess: (result) => {\n\n          store.cognitoUser = localCognitoUser\n\n          AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n            IdentityPoolId: cognitoIdentityPoolId,\n            Logins: {\n              [getCognitoLoginKey()]: result.getIdToken().getJwtToken()\n            }\n          })\n\n          AWS.config.credentials.refresh((error) => {\n            if (error) {\n              console.error(error)\n            } else {\n              initApiGatewayClient(AWS.config.credentials)\n\n              updateAllUserData()\n\n              apiGatewayClient().then(apiGatewayClient => \n                apiGatewayClient.post('/signin', {}, {}, {})\n                  .then(resolve)\n                  .catch(reject)\n              )\n            }\n          })\n        },\n\n        onFailure: reject\n    })\n  })\n}\n\nexport function logout() {\n  if (store.cognitoUser) {\n    store.cognitoUser.signOut()\n    store.resetUserData()\n    localStorage.clear()\n  }\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\n// semantic-ui\nimport { Menu, Loader } from 'semantic-ui-react'\n\n// store\nimport { observer } from 'mobx-react'\nimport { store } from 'services/state'\n\n// utilities\nimport _ from 'lodash'\n\nfunction isActive (apiId, selectedApiId) {\n  return (selectedApiId) ? apiId === selectedApiId : false\n}\n\nexport default observer(function ApisMenu() {\n  const loadingApis = !store.apiList.loaded\n  const hasGatewayApis = !!_.get(store, 'apiList.apiGateway.length')\n  const hasGenericApis = !!_.get(store, 'apiList.generic.length')\n\n  // either grab the selectedApiId from the path OR\n  // grab it from the first apiGateway api OR\n  // grab it from the first generic api\n  const selectedApiId = (\n    this.props.path.params.apiId ||\n    (hasGatewayApis && store.apiList.apiGateway[0].id) ||\n    (hasGenericApis && store.apiList.generic[0].id)\n  )\n\n  // If we're still loading, display a spinner.\n  // If we're not loading, and we don't have any apis, display a message.\n  // If we're not loading, and we have some apis, render the appropriate api subsections for apiGateway and generic apis \n  return (\n    <Menu inverted vertical attached style={{ margin: 0, borderRadius: 0 }} {...this.props}>\n      {loadingApis ? (\n        <Loader active />\n      ) : (\n        (hasGatewayApis || hasGenericApis) ? (\n          <React.Fragment>\n            {hasGatewayApis && <ApiSubsection title=\"Subscribable\" listOfApis={store.apiList.apiGateway} selectedApiId={selectedApiId} />}\n            {hasGenericApis && <ApiSubsection title=\"Not Subscribable\" listOfApis={store.apiList.generic} selectedApiId={selectedApiId} />}\n          </React.Fragment>\n        ) : (\n          <p style={{ padding: \"13px 16px\", color: \"whitesmoke\" }}>No APIs Published</p>\n        )\n      )}\n    </Menu>\n  )\n})\n\nfunction ApiSubsection({ title, listOfApis, selectedApiId }) {\n  return (\n    <React.Fragment>\n      <Menu.Header\n        style={{\n          padding: \"13px 5px 13px 16px\",\n          color: 'lightsteelblue'\n        }}\n      >\n        {title}\n      </Menu.Header>\n      {listOfApis.map(api => (\n        <Menu.Item\n          key={api.id}\n          as={Link}\n          to={`/apis/${api.id}`}\n          active={isActive(api.id.toString(), selectedApiId.toString())}\n        >\n          {api.swagger.info.title}\n        </Menu.Item>\n      ))}\n    </React.Fragment>\n  )\n}","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// semantic-ui\nimport { Button, Header, Image, Container } from 'semantic-ui-react'\n\n// services\nimport { subscribe, unsubscribe } from 'services/api-catalog'\nimport { isAuthenticated } from 'services/self'\n\n// state\nimport { observer } from 'mobx-react'\nimport { store } from 'services/state.js'\n\n// Create the plugin that provides our layout component\nexport const SwaggerLayoutPlugin = () => ({ components: { InfoContainer: InfoReplacement } })\n\n// replaces the InfoContainer component\n// https://github.com/swagger-api/swagger-ui/blob/dd3afdc45656bda2a64ae6a7f9bdad006ea98149/src/core/components/layouts/base.jsx\n\nconst InfoReplacement = observer(({ specSelectors }) => {\n  const basePath = specSelectors.basePath()\n  const host = specSelectors.host()\n  const externalDocs = specSelectors.externalDocs()\n\n  return (\n    <Container fluid textAlign='left' className=\"fixfloat\" style={{ padding: \"40px 0px\" }}>\n      <div style={{ display: \"flex\" }}>\n        <div style={{ flex: \"0 0 auto\", marginRight: \"20px\" }}>\n          <Image size='small' src={store.api.logo} />\n        </div>\n        <div>\n          <Header as='h1'>{store.api.swagger.info.title}</Header>\n          <div style={{ display: \"flex\" }}>\n            <div style={{ marginRight: \"20px\" }}>\n              {store.api.generic && (\n                <p style={{ fontWeight: \"bold\" }}>Version</p>\n              )}\n              <p style={{ fontWeight: \"bold\" }}>Endpoint</p>\n              {/* <p style={{ fontWeight: \"bold\" }}>Usage Plan</p> */}\n            </div>\n            <div>\n              {store.api.generic && (\n                <p>{store.api.swagger.info.version}</p>\n              )}\n              <p>https://{host}{basePath}</p>\n              {/* <p>{store.api.usagePlan.name}</p> */}\n            </div>\n          </div>\n          <p>{externalDocs}</p>\n          <SubscriptionButtons />\n        </div>\n      </div>\n    </Container>\n  )\n})\n\nconst SubscriptionButtons = observer(class SubscriptionButtons extends React.Component {\n  state = {}\n\n  render() {\n    const { api } = store\n    return (\n      (api && isAuthenticated()) ? !api.generic ? (\n        api.subscribed ? (\n          <Button onClick={() => unsubscribe(api.usagePlan.id)}>Unsubscribe</Button>\n        ) : (\n          <Button onClick={() => subscribe(api.usagePlan.id)} >Subscribe</Button>\n        )\n      ) : <Header as='h4' color='darkgrey'>This API is not configured for subscription from the portal.</Header> : null\n    )\n  }\n})\n\n\nexport default SwaggerLayoutPlugin","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// swagger-ui\nimport SwaggerUI from 'swagger-ui'\nimport 'swagger-ui/dist/swagger-ui.css'\n\n// semantic-ui\nimport { Container, Header, Icon } from 'semantic-ui-react'\n\n// services\nimport { getApi } from 'services/api-catalog'\nimport { isAuthenticated } from 'services/self'\n\n// components\nimport ApisMenu from 'components/ApisMenu'\nimport SwaggerLayoutPlugin from 'components/SwaggerUiLayout'\n\n// state\nimport { store } from 'services/state.js'\nimport { observer } from 'mobx-react'\n\nexport default observer(class ApisPage extends React.Component {\n  componentDidMount() { this.updateApi() }\n  componentDidUpdate() { this.updateApi() }\n\n  updateApi = () => {\n    getApi(this.props.match.params.apiId || 'ANY', true)\n      .then(api => {\n        if (api) {\n          let swaggerUiConfig = {\n            dom_id: '#swagger-ui-container',\n            plugins: [SwaggerLayoutPlugin],\n            supportedSubmitMethods: [],\n            spec: api.swagger,\n            onComplete: () => {\n              if (store.apiKey)\n                uiHandler.preauthorizeApiKey(\"api_key\", store.apiKey)\n            }\n          }\n          if (isAuthenticated()) {\n            delete swaggerUiConfig.supportedSubmitMethods\n          }\n          let uiHandler = SwaggerUI(swaggerUiConfig)\n        }\n      })\n  }\n\n  render() {\n    let errorHeader\n    let errorBody \n\n    if (!store.apiList.apiGateway.length && !store.apiList.generic.length) {\n      errorHeader = `No APIs Published`\n      errorBody = `Your administrator hasn't added any APIs to your account. Please contact them to publish an API.`\n    } else if (!store.api) {\n      errorHeader = `No Such API`\n      errorBody = `The selected API doesn't exist.`\n    }\n\n    return (\n      <div style={{ display: \"flex\", flex: \"1 1 auto\", overflow: \"hidden\" }}>\n        <ApisMenu path={this.props.match} style={{ flex: \"0 0 auto\" }} />\n        <div className=\"swagger-section\" style={{ flex: \"1 1 auto\", overflow: 'auto' }}>\n          <div className=\"swagger-ui-wrap\" id=\"swagger-ui-container\" style={{ padding: \"0 20px\" }}>\n            {errorHeader && errorBody && (\n              <React.Fragment>\n                <Header as='h2' icon textAlign=\"center\" style={{ padding: \"40px 0px\" }}>\n                  <Icon name='warning sign' circular />\n                  <Header.Content>{errorHeader}</Header.Content>\n                </Header>\n                <Container text textAlign='justified'>\n                  <p>{errorBody}</p>\n                </Container>\n              </React.Fragment>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n})\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Message } from 'semantic-ui-react'\n\nexport default class AlertPopup extends React.Component {\n  state = {\n    isVisible: false,\n    message: ''\n  }\n\n  handleDismiss = () => {\n    this.setState({ isVisible: false })\n  }\n\n  render() {\n      return (\n        <Message\n          hidden={!this.state.isVisible}\n          negative\n          floating\n          icon='warning sign'\n          onDismiss={this.handleDismiss}\n          header='Error'\n          content={this.state.message}\n        />\n      )\n  }\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Button, Form, Message, Modal } from 'semantic-ui-react'\nimport { Redirect } from 'react-router-dom'\nimport { login } from 'services/self'\nimport { confirmMarketplaceSubscription } from 'services/api-catalog'\n\n export default class SignIn extends React.Component {\n   state = {\n     isSubmitting: false,\n     signedIn: false,\n     errorMessage: '',\n     isOpen: false\n   }\n   open = () => this.setState({ isSubmitting: false, errorMessage: '', isOpen: true })\n   close = () => this.setState({ isOpen: false })\n\n   handleChange = (event, { name, value }) => this.setState({ [name]: value })\n   handleLogin = (event) => {\n    event.preventDefault()\n    this.setState({isSubmitting: true})\n\n    login(this.state.email, this.state.password)\n    .then(() => {\n        this.setState({signedIn: true, isSubmitting: false, errorMessage: ''})\n\n        const { usagePlanId, token } = this.props\n\n        if (usagePlanId && token) {\n   \t       return confirmMarketplaceSubscription(usagePlanId, token)\n        }\n    })\n    .catch((e) => this.setState({errorMessage: e.message, isSubmitting: false}))\n  }\n\n  render() {\n    const { isOpen } = this.state\n\n    return this.state.signedIn ? <Redirect to='/apis' /> : (\n      <Modal\n        size='small'\n        open={isOpen}\n        onOpen={this.open}\n        onClose={this.close}\n        trigger={this.props.trigger}\n      >\n        <Modal.Header>Sign in</Modal.Header>\n        <Modal.Content>\n          <Form onSubmit={this.handleLogin} error={!!this.state.errorMessage} loading={this.state.isSubmitting}>\n            <Form.Input label='Email' name='email' onChange={this.handleChange} />\n            <Form.Input type='password' label='Password' name='password' autoComplete='false' onChange={this.handleChange} />\n            <Message error content={this.state.errorMessage} />\n            <Modal.Actions style={{textAlign: 'right'}}>\n              <Button type='button' onClick={this.close}>Close</Button>\n              <Button primary type='submit'>Sign In</Button>\n            </Modal.Actions>\n          </Form>\n        </Modal.Content>\n      </Modal>)\n  }\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Button, Form, Message, Modal } from 'semantic-ui-react'\nimport { Redirect } from 'react-router-dom'\nimport { register } from 'services/self'\nimport { confirmMarketplaceSubscription } from 'services/api-catalog'\n\n export default class Register extends React.Component {\n  state = {\n    isSubmitting: false,\n    signedIn: false,\n    errorMessage: '',\n    isOpen: false\n  }\n\n  open = () => this.setState({ isSubmitting: false, errorMessage: '', isOpen: true })\n  close = () => this.setState({ isOpen: false })\n\n  handleChange = (event, { name, value }) => this.setState({ [name]: value })\n  handleRegister = (event) => {\n    event.preventDefault()\n    this.setState({ isSubmitting: true })\n\n    register(this.state.email, this.state.password)\n    .then(() => {\n        this.setState({signedIn: true, isSubmitting: false, errorMessage: ''})\n\n        const { usagePlanId, token } = this.props\n\n        if (usagePlanId && token) {\n   \t       return confirmMarketplaceSubscription(usagePlanId, token)\n        }\n    })\n    .catch((e) => this.setState({errorMessage: e.message, isSubmitting: false}))\n  }\n\n  render() {\n    const { isOpen } = this.state\n\n    return this.state.signedIn ? <Redirect to='/apis' /> : (\n      <Modal\n        size='small'\n        open={isOpen}\n        onOpen={this.open}\n        onClose={this.close}\n        trigger={this.props.trigger}\n      >\n        <Modal.Header>Register</Modal.Header>\n        <Modal.Content>\n          <Form onSubmit={this.handleRegister} error={!!this.state.errorMessage} loading={this.state.isSubmitting}>\n            <Form.Input label='Email' name='email' onChange={this.handleChange} />\n            <Form.Input type='password' label='Password' name='password' autoComplete='false' onChange={this.handleChange} />\n            <Message error content={this.state.errorMessage} />\n            <Modal.Actions style={{textAlign: 'right'}}>\n              <Button type='button' onClick={this.close}>Close</Button>\n              <Button primary type='submit'>Register</Button>\n            </Modal.Actions>\n          </Form>\n        </Modal.Content>\n      </Modal>)\n    }\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Menu, Image } from 'semantic-ui-react'\n\nimport { isAuthenticated, logout } from 'services/self'\n\n// mobx\nimport { observer } from 'mobx-react'\n\n// fragments\nimport { fragments } from 'services/get-fragments'\n\n// components\nimport SignIn from './SignIn'\nimport Register from './Register'\n\nexport const NavBar = observer(() => {\n  return (\n    <Menu inverted borderless attached style={{ flex: \"0 0 auto\" }}>\n      <Menu.Item as={Link} to=\"/\">\n        <Image size='mini' src=\"/custom-content/nav-logo.png\" style={{ paddingRight: \"10px\" }} />\n        {fragments.Home.title}\n      </Menu.Item>\n      <Menu.Item as={Link} to=\"/getting-started\">{fragments.GettingStarted.title}</Menu.Item>\n      <Menu.Item as={Link} to=\"/apis\">{fragments.APIs.title}</Menu.Item>\n      <Menu.Menu position=\"right\">\n        { isAuthenticated() ? (\n          <React.Fragment>\n            <Menu.Item as=\"a\" onClick={logout}>Sign Out</Menu.Item>\n            <Menu.Item as={Link} to=\"/dashboard\">My Dashboard</Menu.Item>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <SignIn trigger={<Menu.Item as=\"a\">Sign In</Menu.Item>} />\n            <Register trigger={<Menu.Item as=\"a\">Register</Menu.Item>} /> \n          </React.Fragment>\n        )}\n      </Menu.Menu>\n    </Menu>\n  )\n})\n\nexport default NavBar\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\n// content-fragments (import here to start this ASAP)\nimport 'services/get-fragments'\n\n// semantic-ui\nimport 'semantic-ui-css/semantic.css'\n\n// pages\nimport Home from 'pages/Home'\nimport GettingStarted from 'pages/GettingStarted'\nimport Dashboard from 'pages/Dashboard'\nimport Apis from 'pages/Apis'\n\n// components\nimport AlertPopup from 'components/AlertPopup'\nimport NavBar from 'components/NavBar'\n\nimport { init } from 'services/self'\nimport './index.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    init()\n\n    // We are using an S3 redirect rule to prefix the url path with #!\n    // This then converts it back to a URL path for React routing\n    const hashRoute = window.location.hash.substring(2)\n    window.history.pushState({}, 'home page', hashRoute)\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <NavBar />\n          <AlertPopup />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/getting-started\" component={GettingStarted} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/apis\" component={Apis} />\n            <Route path=\"/apis/:apiId\" component={Apis} />\n            <Route component={() => <h2>Page not found</h2>} />\n          </Switch>\n        </React.Fragment>\n      </BrowserRouter>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}